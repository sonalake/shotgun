
buildscript {
  repositories {
    mavenCentral()
  }
  ext {
    lombokVersion = '1.18.4'
  }
  dependencies {
    classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
  }
}


plugins {
  id 'java'

  id "io.freefair.lombok" version "4.1.5"
  id 'com.github.johnrengelman.shadow' version '5.2.0'
  id "jacoco"
  id "org.sonarqube" version "2.8"

  id 'maven'
  id 'maven-publish'
}
apply from: "gradle/sonar.gradle"
// for publication to nexus
apply plugin: 'maven-publish-auth'

group = "com.sonalake"
version = "1.0.0-SNAPSHOT"


repositories {
  jcenter()
}

dependencies {
  implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.5.1.201910021850-r'
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
  implementation group: 'commons-io', name: 'commons-io', version: '2.6'
  implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
  implementation 'org.jgrapht:jgrapht-core:1.3.1'
  implementation 'org.jgrapht:jgrapht-io:1.3.1'
  implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
  implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.29'
  implementation group: 'com.beust', name: 'jcommander', version: '1.78'


  // Use JUnit Jupiter API for testing.
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'

  // Use JUnit Jupiter Engine for testing.
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'

  testImplementation "org.mockito:mockito-inline:+"
  testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.1.0'


}
jar {
  manifest {
    attributes(
      'Main-Class': 'com.sonalake.shotgun.App'
    )
  }
}
test {
  useJUnitPlatform()
}

publishing {
  publications {
    jar(MavenPublication) {
      from components.java
    }

    cli(MavenPublication) {
      artifact("build/libs/shotgun-${version}-all.jar")
      pom {
        description = "CLI uberjar for ${rootProject.name}"
        artifactId = "${rootProject.name}-cli"
        packaging = "jar"
      }
    }

  }
  repositories {
    maven {
      def rootUrl = "http://atlanta.sonalake.corp:8081/nexus/content/repositories"
      name = version.endsWith("SNAPSHOT") ? 'snapshots' : 'releases'
      url "$rootUrl/$name"
      allowInsecureProtocol true
    }
  }
}

